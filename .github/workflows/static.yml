
# Build and deploy React app to GitHub Pages
name: Deploy React App to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          NODE_ENV: production
        
      - name: Create improved 404.html for SPA routing
        run: |
          cat > dist/404.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="utf-8">
            <title>Numera - Redirecting...</title>
            <script>
              // Enhanced SPA redirect for GitHub Pages
              var l = window.location;
              var pathSegmentsToKeep = 1;
              
              // Get the base path for GitHub Pages
              var basePath = '/ledger-elite-creator/';
              
              // Extract the actual route from the URL
              var route = l.pathname.slice(basePath.length);
              
              // Redirect to index.html with the route as a parameter
              l.replace(
                l.protocol + '//' + l.hostname + (l.port ? ':' + l.port : '') + basePath +
                '?/' + route +
                (l.search ? '&' + l.search.slice(1).replace(/&/g, '~and~') : '') +
                l.hash
              );
            </script>
          </head>
          <body>
            <div style="text-align: center; margin-top: 50px;">
              <h2>Redirecting to Numera...</h2>
              <p>Please wait while we redirect you to the application.</p>
            </div>
          </body>
          </html>
          EOF
        
      - name: Add route handling script to index.html
        run: |
          # Add script to handle the redirected routes in index.html
          sed -i 's/<head>/<head>\n    <script>\n      \/\/ Handle GitHub Pages SPA routing\n      (function(l) {\n        if (l.search[1] === "\/") {\n          var decoded = l.search.slice(1).split("&").map(function(s) {\n            return s.replace(\/~and~\/g, "&")\n          }).join("?");\n          window.history.replaceState(null, null,\n              l.pathname.slice(0, -1) + decoded + l.hash\n          );\n        }\n      }(window.location))\n    <\/script>/' dist/index.html
        
      - name: Create .nojekyll file
        run: touch dist/.nojekyll
        
      - name: Create CNAME file if needed
        run: |
          if [ ! -z "${{ secrets.CUSTOM_DOMAIN }}" ]; then
            echo "${{ secrets.CUSTOM_DOMAIN }}" > dist/CNAME
          fi
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist directory (Vite's build output)
          path: './dist'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
